<launch>

  <!-- IMU product ID -->
  <arg name="prod_id" default="16495"/>

  <!-- Location where the csv file will be stored -->
  <arg name="csv_folder" default="$(find adi_imu_ros)/data"/>

  <!-- Name of the frame associated with the IMU -->
  <arg name="imu_frame" default="imu"/>

  <!-- SPI port on the host computer -->
  <arg name="spi_dev" default="/dev/spidev1.0"/>

  <!-- SPI port frequency -->
  <arg name="spi_speed" default="4000000"/>

  <!-- Specify which message type will be published. You have the following choices: -->
  <!-- "std": For the standard sensor_msgs/Imu message type -->
  <!-- "adi": For our custom adi_imu_ros/AdiImu message type -->
  <!-- "adi_raw": For our custom adi_imu_ros/AdiImuRaw message type -->
  <!-- "csv": To bypass ROS, and save the data into a csv text file -->
  <!-- "csv_raw": To bypass ROS, and save the raw data(hex) into a csv text file -->
  <arg name="message_type" default="adi"/>

  <!-- Set the desired frame rate of the IMU in Hz -->
  <!-- Note that the IMU output is decimated, and not all output rates can be achieved -->
  <!-- The maximum rate might not be attainable either, if the host computer cannot keep up with it -->
  <arg name="output_rate" default="1000"/>

  <!-- Enable/disable iSensor SPI Buffer board support for IMU -->
  <arg name="en_isensor_buffer" default="false"/>

  <!-- Set GPIO pin for PPS input to IMU_iSensor buffer board -->
  <!-- This pin should be set as input to avoid driving it as it's being driven by PPS signal -->
  <arg name="pps_gpio" default="76"/>

  <node pkg="adi_imu_ros" type="adi_imu_ros_node" name="adimuros" output="screen">
    <param name="prod_id" type="int" value="$(arg prod_id)" />
    <param name="csv_folder" type="string" value="$(arg csv_folder)" />
    <param name="imu_frame" type="string" value="$(arg imu_frame)" />
    <param name="spi_dev" type="string" value="$(arg spi_dev)" />
    <param name="spi_speed" type="int" value="$(arg spi_speed)" />
    <param name="message_type" type="string" value="$(arg message_type)" />
    <param name="output_rate" type="int" value="$(arg output_rate)" />
    <param name="en_isensor_buffer" type="bool" value="$(arg en_isensor_buffer)" />
    <param name="pps_gpio" type="string" value="$(arg pps_gpio)" />
  </node>
  
</launch>
